name: 'Build image'

on:
  push:
    branches:
      - '**'
    paths:
      - '.github/workflows/**'
      - 'assets/**'
      - 'boot/**'
      - 'build/**'
      - 'devices/**'
      - 'dlls/**'
      - 'engine/**'
      - 'tools/**'
      - 'config.json'
      - 'hexa.json'
  pull_request:
    branches:
      - '**'
    paths:
      - '.github/workflows/**'
      - 'assets/**'
      - 'boot/**'
      - 'build/**'
      - 'devices/**'
      - 'dlls/**'
      - 'engine/**'
      - 'tools/**'
      - 'config.json'
      - 'hexa.json'

defaults:
  run:
    shell: pwsh

jobs:
  build-image:
    name: 'Building'

    strategy:
      matrix:
        system:
          - windows-2022

    runs-on: ${{ matrix.system }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Hexa
        run: |
          git clone --depth 1 https://github.com/hexalang/Hexa.git ../Hexa

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          cd build
          npm install

      - name: Recode UI Files to Windows 11 Design
        run: |
          echo "Starting recode process for all UI files..."
          $uiFiles = Get-ChildItem -Path * -Recurse -Include *.json, *.css, *.ui
          foreach ($file in $uiFiles) {
              echo "Recoding file: $($file.FullName)"
              node tools/ui-recode.js --path "$($file.FullName)" --theme "windows11"
              if ($LastExitCode -ne 0) {
                  throw "Recode failed for file $($file.FullName)!"
              }
          }

      - name: Validate UI Recoding
        run: |
          echo "Validating UI files for Windows 11 compatibility..."
          node tools/ui-validator.js --path ./assets/ui
          if ($LastExitCode -ne 0) {
              throw "UI Validation failed!"
          }

      - name: Build Project
        run: |
          cmd /c hexa build\hexa.json
          if ($LastExitCode -ne 0) { throw "Build failed!" }

      - name: Run Tests
        run: |
          cd tools
          pwsh ./run-tests.ps1
          if ($LastExitCode -ne 0) { throw "Tests failed!" }

      - name: Create ISO Image
        run: |
          cmd /c node build.js init-or-clean asm efi dll engine ramdisk iso
          if ($LastExitCode -ne 0) { throw "ISO creation failed!" }

      - name: Archive Build
        uses: actions/upload-artifact@v3
        with:
          name: greentea-os-build
          path: |
            build/output/**
            build/iso/**

      - name: Clean up
        run: |
          cmd /c del /s /q build/temp/*
